<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ActueelNS.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:telerikInput="using:Telerik.UI.Xaml.Controls.Input"
    xmlns:converters="using:ActueelNS.Converters"
    xmlns:DateTimePickers="using:Telerik.UI.Xaml.Controls.Input.DateTimePickers"
    xmlns:telerikCore="using:Telerik.Core"
    xmlns:syncfusion="using:Syncfusion.UI.Xaml.Controls.Input"
    x:Class="ActueelNS.UserControls.PlannerControl"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="300">
	<UserControl.Resources>
        <converters:RadioBoolToStringConverter x:Key="RadioBoolToStringConverter" />

      
		<Storyboard x:Name="ShowDatePicker">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DateTimeStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DateTimeStackPanel">
				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="155">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuinticEase EasingMode="EaseInOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowTextBox">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
        <Storyboard x:Name="HideDatePicker">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DateTimeStackPanel">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DateTimeStackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NowTextBox">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="CheckBox">
			<Border Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="PointerOver">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
									Storyboard.TargetProperty="Stroke">
<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxPointerOverBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
									Storyboard.TargetProperty="Stroke">
<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxPressedBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle"
									Storyboard.TargetProperty="Stroke">
<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxDisabledBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked">
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="CheckGlyph"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unchecked" />
						<VisualState x:Name="Indeterminate">
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="IndeterminateGlyph"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="FocusStates">
						<VisualState x:Name="Focused">
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
								<DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unfocused" />
						<VisualState x:Name="PointerFocused" />
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="25" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Rectangle x:Name="NormalRectangle"
						Fill="{StaticResource BackgroundColor}"
						Stroke="{StaticResource CheckBoxBorderThemeBrush}"
						StrokeThickness="0"
						UseLayoutRounding="True"
						Height="21"
						Width="21" />
					<Path x:Name="CheckGlyph"
						Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z"
						Fill="#FF666666"
						Height="14"
						Stretch="Fill"
						Width="16"
						Opacity="0"
						FlowDirection="LeftToRight"/>
					<Rectangle x:Name="IndeterminateGlyph"
						Width="9"
						Height="9"
						Fill="{StaticResource CheckBoxForegroundThemeBrush}"
						Opacity="0" />
					<Rectangle x:Name="FocusVisualWhite"
						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
						StrokeEndLineCap="Square"
						StrokeDashArray="1,1"
						Opacity="0"
						StrokeDashOffset="0.5"
						Width="25"
						Height="25" />
					<Rectangle x:Name="FocusVisualBlack"
						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
						StrokeEndLineCap="Square"
						StrokeDashArray="1,1"
						Opacity="0"
						StrokeDashOffset="1.5"
						Width="25"
						Height="25" />
					<ContentPresenter x:Name="ContentPresenter"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						Content="{TemplateBinding Content}"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Grid.Column="1" Foreground="{StaticResource BackgroundColor}" Opacity="0.6" />
				</Grid>
			</Border>
		</ControlTemplate>
		<ControlTemplate x:Key="ComboBoxControlTemplate1" TargetType="ComboBox">
			<Grid>
				<Grid.Resources>
					<Style x:Key="DropDownToggleStyle" TargetType="ToggleButton">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Rectangle x:Name="LayoutRoot"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Fill="Transparent">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Normal" />
												<VisualState x:Name="PointerOver" />
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
															Storyboard.TargetProperty="Fill">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Disabled" />
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Rectangle>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="21" />
				</Grid.ColumnDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="PointerOver">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
									Storyboard.TargetProperty="Background">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
									Storyboard.TargetProperty="BorderBrush">
<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="Fill">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
									Storyboard.TargetProperty="BorderBrush">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
									Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
									Storyboard.TargetProperty="Background">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
									Storyboard.TargetProperty="BorderBrush">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
									Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemDisabledForegroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
									Storyboard.TargetProperty="Foreground">
<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemDisabledForegroundThemeBrush}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="FocusStates">
						<VisualState x:Name="Focused">
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="HighlightBackground"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
								<DoubleAnimation Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0" />
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unfocused" />
						<VisualState x:Name="PointerFocused" />
						<VisualState x:Name="FocusedDropDown">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
									Storyboard.TargetProperty="Visibility"
									Duration="0">
									<DiscreteObjectKeyFrame KeyTime="0">
										<DiscreteObjectKeyFrame.Value>
											<Visibility>Visible</Visibility>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="DropDownStates">
						<VisualState x:Name="Opened">
							<Storyboard>
								<SplitOpenThemeAnimation
									OpenedTargetName="PopupBorder"
									ContentTargetName="ScrollViewer"
									ClosedTargetName="DropDownToggle"
									ContentTranslationOffset="0"
									OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Closed">
							<Storyboard>
								<SplitCloseThemeAnimation
									OpenedTargetName="PopupBorder"
									ContentTargetName="ScrollViewer"
									ClosedTargetName="DropDownToggle"
									ContentTranslationOffset="40"
									OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Background"
					Grid.ColumnSpan="2"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}" />
				<Rectangle x:Name="HighlightBackground"
					Grid.ColumnSpan="2"
					Fill="{StaticResource ComboBoxFocusedBackgroundThemeBrush}"
					Opacity="0" />
				<Rectangle x:Name="Highlight"
					Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"
					Margin="{TemplateBinding BorderThickness}"
					Opacity="0" />
				<ToggleButton x:Name="DropDownToggle"
					Style="{StaticResource DropDownToggleStyle}"
					Grid.ColumnSpan="2" />
				<ContentPresenter x:Name="ContentPresenter"
					Margin="8,0,0,0"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
				<TextBlock x:Name="DropDownGlyph"
					Text="&#xE011;"
					Grid.Column="1"
					IsHitTestVisible="False"
					Margin="0,0,0,4"
					Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}"
					FontWeight="Bold"
					FontSize="{StaticResource ComboBoxArrowThemeFontSize}"
					FontFamily="{StaticResource SymbolThemeFontFamily}"
					HorizontalAlignment="Right"
					VerticalAlignment="Center" />
				<Popup x:Name="Popup">
					<Border x:Name="PopupBorder"
						Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}"
						BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}"
						BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}"
						HorizontalAlignment="Stretch">
<ScrollViewer x:Name="ScrollViewer" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}"
							VerticalSnapPointsType="Mandatory"
							VerticalSnapPointsAlignment="Near"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</ControlTemplate>
		<Style x:Key="RadioButtonStyle1" TargetType="RadioButton">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource RadioButtonContentForegroundThemeBrush}"/>
			<Setter Property="Padding" Value="1,4,0,0"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundEllipse">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonPointerOverBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonPointerOverForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundEllipse">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonPressedBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="BackgroundEllipse">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonDisabledBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="PointerFocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="29"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Ellipse x:Name="BackgroundEllipse" Fill="White" Height="23" Margin="3,3,3,3" Stroke="{StaticResource RadioButtonBorderThemeBrush}" StrokeThickness="{StaticResource RadioButtonBorderThemeThickness}" UseLayoutRounding="True" VerticalAlignment="Top" Width="23"/>
								<Ellipse x:Name="CheckGlyph" Fill="{StaticResource RadioButtonForegroundThemeBrush}" HorizontalAlignment="Right" Height="13" Margin="0,8,8,0" Opacity="0" VerticalAlignment="Top" Width="13"/>
								<Rectangle x:Name="FocusVisualWhite" Height="29" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1" VerticalAlignment="Top" Width="29"/>
								<Rectangle x:Name="FocusVisualBlack" Height="29" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1" VerticalAlignment="Top" Width="29"/>
								<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Name="Highlight">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fromAutoComplete">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="toAutoComplete">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="viaAutoComplete">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>


    </UserControl.Resources>

    <Grid Background="{StaticResource SideBarBackgroundColor}">
        <Grid  Margin="220,57,0,0" Height="45"
              HorizontalAlignment="Left" VerticalAlignment="Top"
               Tapped="WisselImage_Tapped_1">
<Image x:Name="WisselImage"     />
<Image Source="/Assets/wissel.png" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" />
        
        </Grid>
        
    <Grid  Width="200" HorizontalAlignment="Left">
        <StackPanel>

            <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,0,0,5" Text="Van" x:Uid="PlannerControlVanTextBox"/>
            
            <!--Dummy to grab the focus-->
            <!--<Grid> 
            <local:NoSoundTextBox></local:NoSoundTextBox>
            </Grid>-->

            <Border BorderThickness="0" BorderBrush="Red" x:Name="FromErrorBorder" Background="White">

                    <syncfusion:TextBoxExt Grid.Row="1" x:Name="fromAutoComplete"
                            
                                       BorderBrush="White"
                             AutoCompleteSource="{Binding AllNames}"
                                        SuggestionPopupClosed="from_SuggestionPopupClosed_1"
                                       LostFocus="fromAutoComplete_LostFocus_1"
                             AutoCompleteMode="Suggest"
                             SuggestionMode="StartsWith"
                             IgnoreCase="True"
                             >

                    </syncfusion:TextBoxExt>
                </Border>

                


                <TextBlock x:Name="NaarText" Style="{StaticResource BasicWhiteTextStyle}" Margin="0,20,0,5" Text="Naar" x:Uid="PlannerControlNaarTextBox"/>
                <Border BorderThickness="0" BorderBrush="Red" x:Name="ToErrorBorder" Background="White">
                    <syncfusion:TextBoxExt Grid.Row="1" x:Name="toAutoComplete"
                                       BorderBrush="White"
                             AutoCompleteSource="{Binding AllNames}"
                                        SuggestionPopupClosed="to_SuggestionPopupClosed_1"
                                       LostFocus="toAutoComplete_LostFocus_1"
                             AutoCompleteMode="Suggest"
                             SuggestionMode="StartsWith"
                             IgnoreCase="True"
                             >

                    </syncfusion:TextBoxExt>
                </Border>
            
            <StackPanel Visibility="{Binding IsViaVisible, Converter={StaticResource InverseVis}}">
                <CheckBox Margin="-2,20,0,0" Foreground="{StaticResource BackgroundColor}" Template="{StaticResource CheckBoxControlTemplate1}" IsChecked="{Binding IsViaVisible, Mode=TwoWay}" Content="via station" x:Name="ViaCheckBox"  x:Uid="PlannerControlViaCheckBox"/>
            </StackPanel>

            <StackPanel Visibility="{Binding IsViaVisible, Converter={StaticResource Vis}}">
            <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,20,0,5">
            	<Run Text="Via"/>
</TextBlock>
                    <Border Background="White">
                        <syncfusion:TextBoxExt Grid.Row="1" x:Name="viaAutoComplete"
                                       BorderBrush="White"
                             AutoCompleteSource="{Binding AllNames}"
                                        SuggestionPopupClosed="via_SuggestionPopupClosed_1"
                                       LostFocus="viaAutoComplete_LostFocus_1"
                             AutoCompleteMode="Suggest"
                             SuggestionMode="StartsWith"
                             IgnoreCase="True"
                             >

                        </syncfusion:TextBoxExt>
                    </Border>
                    
                </StackPanel>

            <TextBlock x:Name="textBlock" Style="{StaticResource BasicWhiteTextStyle}" Margin="0,20,0,5" Text="Wanneer?" x:Uid="PlannerControlWanneerTextBox"/>
             <!--<TextBox GotFocus="NowTextBox_GotFocus_1" IsReadOnly="True"  x:Name="NowTextBox"  Foreground="{StaticResource TextColor}" x:Uid="PlannerControlNotTextBox" Text="Nu" PointerPressed="NowTextBox_PointerPressed" ></TextBox>-->
 
<Grid Background="White" x:Name="NowTextBox" Tapped="NowTextBox_Tapped_1">
                <Border x:Name="BorderElement"
											BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}"
											BorderThickness="1"/>
                <Border x:Name="BackgroundElement" Height="32"
											Background="{StaticResource TextBoxButtonBackgroundThemeBrush}"
											Margin="1">
                    <TextBlock  FontSize="16"
                               VerticalAlignment="Center"
                               Margin="10,0,0,0"
												Foreground="Black"
												Text="Nu"
                                x:Uid="PlannerControlNotTextBox"
												/>
                </Border>
            </Grid>


                <!--Height="0" Visibility="Collapsed"-->
                <StackPanel x:Name="DateTimeStackPanel" Height="0" Visibility="Collapsed" >
                <StackPanel>
                    <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,20,0,0" Text="Tijd" x:Uid="PlannerControlTijdTextBox"/>
                            <telerikInput:RadTimePicker Value="{Binding PlanDateTime, Mode=TwoWay}" />

                    
                </StackPanel>

                <StackPanel>
                    <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,15,0,0" Text="Datum" x:Uid="PlannerControlDatumTextBox"/>
                        <telerikInput:RadDatePicker x:Name="DatePicker" Value="{Binding PlanDateTime, Mode=TwoWay}" />

                        <!--<StackPanel Orientation="Horizontal">
                        <ComboBox Template="{StaticResource ComboBoxControlTemplate1}" ItemsSource="{Binding Days}" SelectedItem="{Binding DateDay, Mode=TwoWay}" Width="60">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>

                        </ComboBox>

                        <ComboBox Template="{StaticResource ComboBoxControlTemplate1}" ItemsSource="{Binding Months}" SelectedItem="{Binding DateMonth, Mode=TwoWay}" Width="60" Margin="10,0,0,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Text}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>



                        <ComboBox Template="{StaticResource ComboBoxControlTemplate1}" ItemsSource="{Binding Years}" SelectedItem="{Binding DateYear, Mode=TwoWay}" Width="100" Margin="10,0,0,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </StackPanel>-->
                </StackPanel>

            </StackPanel>
           

            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <RadioButton IsChecked="{Binding Type, ConverterParameter=vertrek, Converter={StaticResource RadioBoolToStringConverter}, Mode=TwoWay}"  Foreground="White" FontSize="{StaticResource ControlContentThemeFontSize}"  Content="vertrek" x:Uid="PlannerControlVertrekCheck" Style="{StaticResource RadioButtonStyle1}"/>
                <RadioButton IsChecked="{Binding Type, ConverterParameter=aankomst, Converter={StaticResource RadioBoolToStringConverter}, Mode=TwoWay}"  Foreground="White" FontSize="{StaticResource ControlContentThemeFontSize}"  Margin="25,0,0,0" Content="aankomst" x:Uid="PlannerControlAankomstCheck"  Style="{StaticResource RadioButtonStyle1}"/>
            </StackPanel>

                <Border BorderBrush="White" BorderThickness="2" Margin="0,20" Visibility="{Binding ShowHslMessage, Converter={StaticResource Vis}}">
                    <StackPanel>
                        <TextBlock Margin="5"  Style="{StaticResource BasicWhiteTextStyle}" x:Uid="PlannerAskFyra">Wil je de Fyra meenemen in het reisadvies? Zet dit aan bij de instellingen via de Settings Charm.</TextBlock>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button FontSize="12" Style="{StaticResource SubmitButton}" Command="{Binding NoHslMessageCommand}" x:Uid="PlannerFyraNee">Nee</Button>
                            <Button FontSize="12" Style="{StaticResource SubmitButton}" Command="{Binding YesHslMessageCommand}" x:Uid="PlannerFyraJa">Toon instellingen</Button>
                        </StackPanel>
                    </StackPanel>
                   
                </Border>
   

                <Button HorizontalAlignment="Right" 
                        Margin="0,10"
                        Command="{Binding SearchCommand}"
                        Style="{StaticResource SubmitButton}"
                        BorderThickness="0" x:Name="PlanButton" Content="Plan mijn reis" x:Uid="PlannerControlButton"/>

            <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,0,0,5" Foreground="White" Visibility="Collapsed" x:Name="StationErrorTextBlock" Text="Vul een vertrek- en aankomststation in." x:Uid="PlannerControlError"/>
            <TextBlock Style="{StaticResource BasicWhiteTextStyle}" Margin="0,0,0,5" Foreground="White" Visibility="{Binding ShowErrorDifferent, Converter={StaticResource Vis}}" Text="Vul verschillende vertrek- en aankomststations in." x:Uid="PlannerControlErrorNotDifferent"/>

        </StackPanel>
        
    </Grid>
</Grid>
</UserControl>
